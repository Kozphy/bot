{
    "sourceFile": "src/cmds/cli_option.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1652500289985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1652771365587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n Definition of cli arguments used in arguments.py\n \"\"\"\n \n from pathlib import Path\n-import logging\n from constants import (BOT_DIR, CONFIG, LOG_FILE, DEFAULT_USERDATA_DIR, BOT_NAME,\n DEFAULT_DB_DIR, DEFAULT_DB_PORT,DEFAULT_DB_NAME, DEFAULT_DB_USER, DEFAULT_DB_HOST, __version__)\n from datetime import datetime\n import argparse\n"
                }
            ],
            "date": 1652500289985,
            "name": "Commit-0",
            "content": "\"\"\"\nDefinition of cli arguments used in arguments.py\n\"\"\"\n\nfrom pathlib import Path\nimport logging\nfrom constants import (BOT_DIR, CONFIG, LOG_FILE, DEFAULT_USERDATA_DIR, BOT_NAME,\nDEFAULT_DB_DIR, DEFAULT_DB_PORT,DEFAULT_DB_NAME, DEFAULT_DB_USER, DEFAULT_DB_HOST, __version__)\nfrom datetime import datetime\nimport argparse\nimport click\n\nclass Arg:\n    # Optional cli arguments\n    def __init__(self, *args, **kwargs):\n        self.cli = args\n        self.kwargs = kwargs\n\n# Deprecated\ndef valid_date(s):\n    try:\n        return datetime.strptime(s, \"%Y-%M-%D\")\n    except ValueError:\n        msg = \"not a valid date: {0!r}\".format(s)\n        raise argparse.ArgumentTypeError(msg)\n\n## option arguments\nARGS_COMMON = ['verbosity', 'logfile', 'version', 'config', 'user_data_dir']\n\nARGS_TRADE = ['strategy','strategy_path', 'db_path', 'db_name', 'db_user', 'db_host', 'db_port', 'dry_run',\n 'dry_run_wallet']\n\nSYNC_ARGS = ['startAt', 'endAt', 'db_path', 'db_name', 'db_host', 'db_user', 'db_port']\n\nARGS_COMMON_OPTIMIZE = ['timeframe', 'timerange', 'fee']\n\n## List of avalilable cli options\nAVAILABLE_CLI_OPTIONS = {\n    # Common options\n    'verbosity': Arg(\n        '-v', '--verbose', \n        help='Verbose mode (-vv for more, -vvv to get all messages).',\n        count=True,\n        default=0,\n        show_default=True,\n    ),\n    'logfile': Arg(\n        '--logfile',\n        help='Log to the file specified.',\n        metavar='FILE',\n        default=LOG_FILE,\n        show_default=True,\n    ),\n    'version': Arg(\n        '-v', '--version',\n        prog_name=BOT_NAME,\n        message=f'%(prog)s {__version__}',\n    ),\n    'config': Arg(\n        '-c', '--config',\n        help=f'Specify configuration file',\n        metavar='PATH',\n        default=CONFIG,\n        show_default=True,\n    ),\n    'user_data_dir': Arg(\n        '-udd', '--user-data-dir',\n        help='Path point to userdata directory.',\n        metavar='PATH',\n        default=DEFAULT_USERDATA_DIR,\n        show_default=True,\n    ),\n    'db_name': Arg(\n        '-dbn', '--db-name',\n        help='what db name do you want?',\n        metavar='NAME',\n        default=DEFAULT_DB_NAME,\n        show_default=True,\n    ),\n    'db_path': Arg(\n        '-dbph', '--db-path',\n        help='Where did you want to set the database?',\n        metavar='PATH',\n        default=DEFAULT_DB_DIR,\n        show_default=True,\n    ),\n    'db_host': Arg(\n        '-dbh', '--db-host',\n        help='Database host',\n        default=DEFAULT_DB_HOST,\n        show_default=True,\n    ),\n    'db_user': Arg(\n        '-dbu', '--db-user',\n        help='who want to connect database?',\n        metavar='USER',\n        default=DEFAULT_DB_USER,\n        show_default=True,\n    ),\n    'db_port': Arg(\n        '-dbpt', '--db-port',\n        help='The port to connect to',\n        metavar='PORT',\n        default=DEFAULT_DB_PORT,\n        show_default=True,\n    ),\n    # Trade options\n    'strategy': Arg(\n        '-s', '--strategy',\n        help='What strategy do you want to run?',\n        metavar='PATH',\n        nargs=1\n    ),\n    'strategy_path': Arg(\n        '-sp', '--strategy-path',\n        help='Where did you put the strategy?',\n        metavar='PATH',\n        nargs='?',\n        default=f'{BOT_DIR}/user_data/strategy',\n    ),\n    'dry_run': Arg(\n        '-drun', '--dry-run',\n        help='active virtual trade mode',\n        action='store_true',\n    ),\n    'dry_run_wallet': Arg(\n        '-drw', '--dry-run-wallet',\n        help='How much dry run wallet do you want to initialize?',\n        metavar='number',\n        default='1000',\n        nargs=1,\n    ),\n   # no-config required  (sync, backtest)\n   'startAt': Arg(\n       '-sAt', '--start-at',\n       help='when do you want to start',\n       metavar='YYYY-MM-DD',\n       type=click.DateTime(formats=['%Y-%m-%d']),\n    ),\n   'endAt': Arg(\n       '-eAt', '--end-at',\n       help='when do you want to stop',\n       metavar='YYYY-MM-DD',\n       type=click.DateTime(formats=['%Y-%m-%d'])\n   )\n}\n\n\n"
        }
    ]
}